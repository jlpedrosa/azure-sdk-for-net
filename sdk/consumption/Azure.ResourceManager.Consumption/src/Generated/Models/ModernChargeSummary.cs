// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;

namespace Azure.ResourceManager.Consumption.Models
{
    /// <summary> Modern charge summary. </summary>
    public partial class ModernChargeSummary : ChargeSummary
    {
        /// <summary> Initializes a new instance of ModernChargeSummary. </summary>
        internal ModernChargeSummary()
        {
            Kind = ChargeSummaryKind.Modern;
        }

        /// <summary> Initializes a new instance of ModernChargeSummary. </summary>
        /// <param name="id"> Resource Id. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="kind"> Specifies the kind of charge summary. </param>
        /// <param name="billingPeriodId"> The id of the billing period resource that the charge belongs to. </param>
        /// <param name="usageStart"> Usage start date. </param>
        /// <param name="usageEnd"> Usage end date. </param>
        /// <param name="azureCharges"> Azure Charges. </param>
        /// <param name="chargesBilledSeparately"> Charges Billed separately. </param>
        /// <param name="marketplaceCharges"> Marketplace Charges. </param>
        /// <param name="billingAccountId"> Billing Account Id. </param>
        /// <param name="billingProfileId"> Billing Profile Id. </param>
        /// <param name="invoiceSectionId"> Invoice Section Id. </param>
        /// <param name="customerId"> Customer Id. </param>
        /// <param name="isInvoiced"> Is charge Invoiced. </param>
        internal ModernChargeSummary(string id, string name, string type, IReadOnlyDictionary<string, string> tags, ChargeSummaryKind kind, string billingPeriodId, string usageStart, string usageEnd, Amount azureCharges, Amount chargesBilledSeparately, Amount marketplaceCharges, string billingAccountId, string billingProfileId, string invoiceSectionId, string customerId, bool? isInvoiced) : base(id, name, type, tags, kind)
        {
            BillingPeriodId = billingPeriodId;
            UsageStart = usageStart;
            UsageEnd = usageEnd;
            AzureCharges = azureCharges;
            ChargesBilledSeparately = chargesBilledSeparately;
            MarketplaceCharges = marketplaceCharges;
            BillingAccountId = billingAccountId;
            BillingProfileId = billingProfileId;
            InvoiceSectionId = invoiceSectionId;
            CustomerId = customerId;
            IsInvoiced = isInvoiced;
            Kind = kind;
        }

        /// <summary> The id of the billing period resource that the charge belongs to. </summary>
        public string BillingPeriodId { get; }
        /// <summary> Usage start date. </summary>
        public string UsageStart { get; }
        /// <summary> Usage end date. </summary>
        public string UsageEnd { get; }
        /// <summary> Azure Charges. </summary>
        public Amount AzureCharges { get; }
        /// <summary> Charges Billed separately. </summary>
        public Amount ChargesBilledSeparately { get; }
        /// <summary> Marketplace Charges. </summary>
        public Amount MarketplaceCharges { get; }
        /// <summary> Billing Account Id. </summary>
        public string BillingAccountId { get; }
        /// <summary> Billing Profile Id. </summary>
        public string BillingProfileId { get; }
        /// <summary> Invoice Section Id. </summary>
        public string InvoiceSectionId { get; }
        /// <summary> Customer Id. </summary>
        public string CustomerId { get; }
        /// <summary> Is charge Invoiced. </summary>
        public bool? IsInvoiced { get; }
    }
}
