// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Consumption.Models
{
    /// <summary> A forecast resource. </summary>
    public partial class Forecast : Resource
    {
        /// <summary> Initializes a new instance of Forecast. </summary>
        internal Forecast()
        {
            ConfidenceLevels = new ChangeTrackingList<ForecastPropertiesConfidenceLevelsItem>();
        }

        /// <summary> Initializes a new instance of Forecast. </summary>
        /// <param name="id"> Resource Id. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="usageDate"> The usage date of the forecast. </param>
        /// <param name="grain"> The granularity of forecast. </param>
        /// <param name="charge"> The amount of charge. </param>
        /// <param name="currency"> The ISO currency in which the meter is charged, for example, USD. </param>
        /// <param name="chargeType"> The type of the charge. Could be actual or forecast. </param>
        /// <param name="confidenceLevels"> The details about the forecast confidence levels. This is populated only when chargeType is Forecast. </param>
        internal Forecast(string id, string name, string type, IReadOnlyDictionary<string, string> tags, string usageDate, Grain? grain, decimal? charge, string currency, ChargeType? chargeType, IReadOnlyList<ForecastPropertiesConfidenceLevelsItem> confidenceLevels) : base(id, name, type, tags)
        {
            UsageDate = usageDate;
            Grain = grain;
            Charge = charge;
            Currency = currency;
            ChargeType = chargeType;
            ConfidenceLevels = confidenceLevels;
        }

        /// <summary> The usage date of the forecast. </summary>
        public string UsageDate { get; }
        /// <summary> The granularity of forecast. </summary>
        public Grain? Grain { get; }
        /// <summary> The amount of charge. </summary>
        public decimal? Charge { get; }
        /// <summary> The ISO currency in which the meter is charged, for example, USD. </summary>
        public string Currency { get; }
        /// <summary> The type of the charge. Could be actual or forecast. </summary>
        public ChargeType? ChargeType { get; }
        /// <summary> The details about the forecast confidence levels. This is populated only when chargeType is Forecast. </summary>
        public IReadOnlyList<ForecastPropertiesConfidenceLevelsItem> ConfidenceLevels { get; }
    }
}
