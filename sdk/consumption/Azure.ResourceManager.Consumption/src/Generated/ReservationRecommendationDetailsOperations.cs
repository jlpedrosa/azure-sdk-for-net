// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core.Pipeline;
using Azure.ResourceManager.Consumption.Models;

namespace Azure.ResourceManager.Consumption
{
    /// <summary> The ReservationRecommendationDetails service client. </summary>
    public partial class ReservationRecommendationDetailsOperations
    {
        private readonly ClientDiagnostics _clientDiagnostics;
        private readonly HttpPipeline _pipeline;
        internal ReservationRecommendationDetailsRestOperations RestClient { get; }
        /// <summary> Initializes a new instance of ReservationRecommendationDetailsOperations for mocking. </summary>
        protected ReservationRecommendationDetailsOperations()
        {
        }
        /// <summary> Initializes a new instance of ReservationRecommendationDetailsOperations. </summary>
        /// <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
        /// <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="apiVersion"> Api Version. </param>
        internal ReservationRecommendationDetailsOperations(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Uri endpoint = null, string apiVersion = "2019-10-01")
        {
            RestClient = new ReservationRecommendationDetailsRestOperations(clientDiagnostics, pipeline, endpoint, apiVersion);
            _clientDiagnostics = clientDiagnostics;
            _pipeline = pipeline;
        }

        /// <summary> Details of a reservation recommendation for what-if analysis of reserved instances. </summary>
        /// <param name="billingScope"> The scope associated with reservation recommendation details operations. This includes &apos;/subscriptions/{subscriptionId}/&apos; for subscription scope, &apos;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}&apos; for resource group scope, /providers/Microsoft.Billing/billingAccounts/{billingAccountId}&apos; for BillingAccount scope, and &apos;/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}&apos; for billingProfile scope. </param>
        /// <param name="scope"> Scope of the reservation. </param>
        /// <param name="region"> Used to select the region the recommendation should be generated for. </param>
        /// <param name="term"> Specify length of reservation recommendation term. </param>
        /// <param name="lookBackPeriod"> Filter the time period on which reservation recommendation results are based. </param>
        /// <param name="product"> Filter the products for which reservation recommendation results are generated. Examples: Standard_DS1_v2 (for VM), Premium_SSD_Managed_Disks_P30 (for Managed Disks). </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<ReservationRecommendationDetailsModel>> GetAsync(string billingScope, Scope scope, string region, Term term, LookBackPeriod lookBackPeriod, string product, CancellationToken cancellationToken = default)
        {
            using var scope0 = _clientDiagnostics.CreateScope("ReservationRecommendationDetailsOperations.Get");
            scope0.Start();
            try
            {
                return await RestClient.GetAsync(billingScope, scope, region, term, lookBackPeriod, product, cancellationToken).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope0.Failed(e);
                throw;
            }
        }

        /// <summary> Details of a reservation recommendation for what-if analysis of reserved instances. </summary>
        /// <param name="billingScope"> The scope associated with reservation recommendation details operations. This includes &apos;/subscriptions/{subscriptionId}/&apos; for subscription scope, &apos;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}&apos; for resource group scope, /providers/Microsoft.Billing/billingAccounts/{billingAccountId}&apos; for BillingAccount scope, and &apos;/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}&apos; for billingProfile scope. </param>
        /// <param name="scope"> Scope of the reservation. </param>
        /// <param name="region"> Used to select the region the recommendation should be generated for. </param>
        /// <param name="term"> Specify length of reservation recommendation term. </param>
        /// <param name="lookBackPeriod"> Filter the time period on which reservation recommendation results are based. </param>
        /// <param name="product"> Filter the products for which reservation recommendation results are generated. Examples: Standard_DS1_v2 (for VM), Premium_SSD_Managed_Disks_P30 (for Managed Disks). </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<ReservationRecommendationDetailsModel> Get(string billingScope, Scope scope, string region, Term term, LookBackPeriod lookBackPeriod, string product, CancellationToken cancellationToken = default)
        {
            using var scope0 = _clientDiagnostics.CreateScope("ReservationRecommendationDetailsOperations.Get");
            scope0.Start();
            try
            {
                return RestClient.Get(billingScope, scope, region, term, lookBackPeriod, product, cancellationToken);
            }
            catch (Exception e)
            {
                scope0.Failed(e);
                throw;
            }
        }
    }
}
