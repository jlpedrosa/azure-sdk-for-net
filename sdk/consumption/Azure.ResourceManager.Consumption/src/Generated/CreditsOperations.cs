// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core.Pipeline;
using Azure.ResourceManager.Consumption.Models;

namespace Azure.ResourceManager.Consumption
{
    /// <summary> The Credits service client. </summary>
    public partial class CreditsOperations
    {
        private readonly ClientDiagnostics _clientDiagnostics;
        private readonly HttpPipeline _pipeline;
        internal CreditsRestOperations RestClient { get; }
        /// <summary> Initializes a new instance of CreditsOperations for mocking. </summary>
        protected CreditsOperations()
        {
        }
        /// <summary> Initializes a new instance of CreditsOperations. </summary>
        /// <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
        /// <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="apiVersion"> Api Version. </param>
        internal CreditsOperations(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Uri endpoint = null, string apiVersion = "2019-10-01")
        {
            RestClient = new CreditsRestOperations(clientDiagnostics, pipeline, endpoint, apiVersion);
            _clientDiagnostics = clientDiagnostics;
            _pipeline = pipeline;
        }

        /// <summary> The credit summary by billingAccountId and billingProfileId. </summary>
        /// <param name="billingAccountId"> BillingAccount ID. </param>
        /// <param name="billingProfileId"> Azure Billing Profile ID. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<CreditSummary>> GetAsync(string billingAccountId, string billingProfileId, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("CreditsOperations.Get");
            scope.Start();
            try
            {
                return await RestClient.GetAsync(billingAccountId, billingProfileId, cancellationToken).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> The credit summary by billingAccountId and billingProfileId. </summary>
        /// <param name="billingAccountId"> BillingAccount ID. </param>
        /// <param name="billingProfileId"> Azure Billing Profile ID. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<CreditSummary> Get(string billingAccountId, string billingProfileId, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("CreditsOperations.Get");
            scope.Start();
            try
            {
                return RestClient.Get(billingAccountId, billingProfileId, cancellationToken);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }
    }
}
